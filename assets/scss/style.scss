body {
    /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#094c72+98,01293f+100 */
    background-color: black;
    overflow: hidden;
}

@function box-shadow($stars) {
    $bxshadow: ();
    @for $i from 1 to $stars {
        $bxshadow: append($bxshadow, (random(2000) + 0px) (random(2000) + 0px) #fff, comma);
    }
    @return unquote($bxshadow);
}

$bxshadow-large: box-shadow(300);
$bxshadow-medium: box-shadow(500);
$bxshadow-small: box-shadow(800);
.stars.large {
    height: 3px;
    width: 3px;
    background: transparent;
    box-shadow: $bxshadow-large;
    animation: blink-large 7s infinite;
}

.stars.medium {
    height: 2px;
    width: 2px;
    background: transparent;
    box-shadow: $bxshadow-medium;
    animation: blink-medium 5s infinite;
}

.stars.small {
    height: 1px;
    width: 1px;
    background: transparent;
    box-shadow: $bxshadow-small;
    animation: blink-small 3s infinite;
}

@keyframes blink-large {
    0% {
        box-shadow: $bxshadow-large;
    }
    70% {
        $colors: '#fff', 'transparent';
        $stars: $bxshadow-large;
        @for $i from 1 to length($stars) {
            $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
            $stars: set-nth($stars, $i, $star);
        }
        box-shadow: $stars;
    }
    100% {
        box-shadow: $bxshadow-large;
    }
}

@keyframes blink-medium {
    0% {
        box-shadow: $bxshadow-medium;
    }
    70% {
        $colors: '#fff', 'transparent';
        $stars: $bxshadow-medium;
        @for $i from 1 to length($stars) {
            $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
            $stars: set-nth($stars, $i, $star);
        }
        box-shadow: $stars;
    }
    100% {
        box-shadow: $bxshadow-medium;
    }
}

@keyframes blink-small {
    0% {
        box-shadow: $bxshadow-small;
    }
    70% {
        $colors: '#fff', 'transparent';
        $stars: $bxshadow-small;
        @for $i from 1 to length($stars) {
            $star: set-nth(nth($stars, $i), 3, unquote(nth($colors, random(length($colors)))));
            $stars: set-nth($stars, $i, $star);
        }
        box-shadow: $stars;
    }
    100% {
        box-shadow: $bxshadow-small;
    }
}

h2 {
    margin-left: auto;
    margin-right: auto;
    margin-top: 20%;
    width: 400px;
    font-family: Arial, Helvetica, sans-serif;
    color: rgb(99, 99, 245);
    animation-name: animeintro;
    animation-duration: 5s;
    animation-fill-mode: forwards;
}

img {
    position: absolute;
    right: 50%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    animation-name: animeimg;
    animation-duration: 5s;
    animation-delay: 5s;
    animation-fill-mode: forwards;
}

.text {
    width: 50%;
    text-align: justify center;
    margin-left: auto;
    margin-right: auto;
    color: yellow;
    margin-top: -500px;
    transform: perspective(100px) rotate3d(1, 0, 0, 30deg) translate3d(0, 890px, -200px);
    p {
        span {
            font-size: 2em;
        }
        font-family: Arial,
        Helvetica,
        sans-serif;
        font-size: 1.5em;
        font-stretch: 250%;
        font-weight: bolder;
        letter-spacing: 3px;
        animation-duration: 50s;
        animation-name: anime;
        animation-delay: 3s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
        i {
            font-size: 15em;
        }
    }
}

@keyframes anime {
    100% {
        transform: translate3d(0, -1500px, 0);
    }
}

@keyframes animeimg {
    0% {
        opacity: 1;
        width: 300px;
        height: 300px;
    }
    100% {
        width: 0px;
        height: 0px;
    }
}

@keyframes animeintro {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}